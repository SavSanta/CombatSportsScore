
// This file has been generated by the GUI designer. Do not modify.
namespace CombatSportsScore
{
	public partial class RDWidget
	{
		private global::Gtk.Table table;

		private global::CombatSportsScore.ColourButton colourbutton1;

		private global::CombatSportsScore.ColourButton colourbutton2;

		private global::Gtk.HBox hboxtoggle;

		private global::Gtk.ToggleButton toggleKD;

		private global::Gtk.ToggleButton toggleFoul;

		private global::Gtk.ToggleButton toggleSwing;

		private global::Gtk.Label labelRound;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget CombatSportsScore.RDWidget
			global::Stetic.BinContainer.Attach(this);
			this.WidthRequest = 546;
			this.Name = "CombatSportsScore.RDWidget";
			// Container child CombatSportsScore.RDWidget.Gtk.Container+ContainerChild
			this.table = new global::Gtk.Table(((uint)(2)), ((uint)(3)), false);
			this.table.Name = "table";
			this.table.RowSpacing = ((uint)(2));
			// Container child table.Gtk.Table+TableChild
			this.colourbutton1 = new global::CombatSportsScore.ColourButton();
			this.colourbutton1.Events = ((global::Gdk.EventMask)(256));
			this.colourbutton1.Name = "colourbutton1";
			this.table.Add(this.colourbutton1);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table[this.colourbutton1]));
			w1.TopAttach = ((uint)(1));
			w1.BottomAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.colourbutton2 = new global::CombatSportsScore.ColourButton();
			this.colourbutton2.Events = ((global::Gdk.EventMask)(256));
			this.colourbutton2.Name = "colourbutton2";
			this.table.Add(this.colourbutton2);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table[this.colourbutton2]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.LeftAttach = ((uint)(2));
			w2.RightAttach = ((uint)(3));
			w2.XOptions = ((global::Gtk.AttachOptions)(6));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.hboxtoggle = new global::Gtk.HBox();
			this.hboxtoggle.Name = "hboxtoggle";
			this.hboxtoggle.Homogeneous = true;
			// Container child hboxtoggle.Gtk.Box+BoxChild
			this.toggleKD = new global::Gtk.ToggleButton();
			global::Gtk.Tooltips w3 = new Gtk.Tooltips();
			w3.SetTip(this.toggleKD, "If Round Has A KnockDown", "If Round Has A KnockDown");
			this.toggleKD.CanFocus = true;
			this.toggleKD.Name = "toggleKD";
			this.toggleKD.UseUnderline = true;
			this.toggleKD.Label = "Knockdown";
			this.hboxtoggle.Add(this.toggleKD);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hboxtoggle[this.toggleKD]));
			w4.Position = 0;
			// Container child hboxtoggle.Gtk.Box+BoxChild
			this.toggleFoul = new global::Gtk.ToggleButton();
			w3.SetTip(this.toggleFoul, "Round Has Points Taken", "Round Has Points Taken");
			this.toggleFoul.CanFocus = true;
			this.toggleFoul.Name = "toggleFoul";
			this.toggleFoul.UseUnderline = true;
			this.toggleFoul.Label = "Point";
			this.hboxtoggle.Add(this.toggleFoul);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hboxtoggle[this.toggleFoul]));
			w5.Position = 1;
			// Container child hboxtoggle.Gtk.Box+BoxChild
			this.toggleSwing = new global::Gtk.ToggleButton();
			w3.SetTip(this.toggleSwing, "You Consider Round Swingable To Either Fighter", "You Consider Round Swingable To Either Fighter");
			this.toggleSwing.CanFocus = true;
			this.toggleSwing.Name = "toggleSwing";
			this.toggleSwing.UseUnderline = true;
			this.toggleSwing.Label = "Swing";
			this.hboxtoggle.Add(this.toggleSwing);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hboxtoggle[this.toggleSwing]));
			w6.Position = 2;
			this.table.Add(this.hboxtoggle);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table[this.hboxtoggle]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(6));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelRound = new global::Gtk.Label();
			this.labelRound.Name = "labelRound";
			this.labelRound.LabelProp = "<b>Round </b>";
			this.labelRound.UseMarkup = true;
			this.labelRound.Justify = ((global::Gtk.Justification)(2));
			this.table.Add(this.labelRound);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table[this.labelRound]));
			w8.RightAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(7));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add(this.table);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
		}
	}
}
